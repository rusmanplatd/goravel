{{define "security/change-password.tmpl"}}
    {{template "layouts/header.tmpl" .}}

    <!-- Page Content -->
    <main class="container py-5">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-8 col-xl-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body p-4 p-md-5">
                        <div class="text-center mb-4">
                            <div class="mx-auto bg-primary bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center mb-3" style="width: 60px; height: 60px;">
                                <i class="fas fa-key text-primary fs-4"></i>
                            </div>
                            <h2 class="h3 fw-bold text-dark mb-2">
                                Change Password
                            </h2>
                            <p class="text-muted mb-0">
                                Update your password to keep your account secure
                            </p>
                        </div>

                        <!-- Alert Messages -->
                        <div id="alert-container">
                            {{if .success}}
                            <div class="alert alert-success d-flex align-items-center alert-dismissible fade show" role="alert">
                                <i class="fas fa-check-circle me-2"></i>
                                <div class="flex-grow-1">{{.success}}</div>
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                            {{end}}

                            {{if .error}}
                            <div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                <div class="flex-grow-1">{{.error}}</div>
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                            {{end}}
                        </div>

                        <!-- Password Requirements -->
                        <div class="card bg-light border-0 mb-4">
                            <div class="card-body py-3">
                                <h6 class="card-title mb-3">
                                    <i class="fas fa-shield-alt text-primary me-2"></i>
                                    Password Requirements
                                </h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <ul class="list-unstyled mb-0 small">
                                            <li class="mb-1" id="req-length">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                At least 12 characters
                                            </li>
                                            <li class="mb-1" id="req-uppercase">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                One uppercase letter
                                            </li>
                                            <li class="mb-1" id="req-lowercase">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                One lowercase letter
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="col-md-6">
                                        <ul class="list-unstyled mb-0 small">
                                            <li class="mb-1" id="req-number">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                One number
                                            </li>
                                            <li class="mb-1" id="req-special">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                One special character
                                            </li>
                                            <li class="mb-1" id="req-common">
                                                <i class="fas fa-circle text-muted me-2"></i>
                                                Not a common password
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <form method="POST" action="/security/change-password" id="change-password-form">
                            <!-- Current Password -->
                            <div class="mb-4">
                                <label for="current_password" class="form-label fw-medium">
                                    <i class="fas fa-lock me-2"></i>
                                    Current Password
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="fas fa-key text-muted"></i>
                                    </span>
                                    <input id="current_password" name="current_password" type="password" 
                                           class="form-control form-control-lg border-start-0 bg-light" 
                                           placeholder="Enter your current password" required autocomplete="current-password">
                                    <button class="btn btn-outline-secondary border-start-0" type="button" onclick="togglePassword('current_password')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- New Password -->
                            <div class="mb-3">
                                <label for="new_password" class="form-label fw-medium">
                                    <i class="fas fa-shield-alt me-2"></i>
                                    New Password
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="fas fa-key text-muted"></i>
                                    </span>
                                    <input id="new_password" name="new_password" type="password" 
                                           class="form-control form-control-lg border-start-0 bg-light" 
                                           placeholder="Enter your new password" required autocomplete="new-password">
                                    <button class="btn btn-outline-secondary border-start-0" type="button" onclick="togglePassword('new_password')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                
                                <!-- Password Strength Meter -->
                                <div class="mt-2">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <small class="text-muted">Password Strength</small>
                                        <small id="strength-text" class="fw-medium text-muted">Enter password</small>
                                    </div>
                                    <div class="progress" style="height: 6px;">
                                        <div id="strength-bar" class="progress-bar" role="progressbar" style="width: 0%"></div>
                                    </div>
                                </div>

                                <!-- Breach Check -->
                                <div id="breach-check" class="mt-2 d-none">
                                    <div class="alert alert-warning py-2 mb-0">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        <small>This password has been found in data breaches. Please choose a different password.</small>
                                    </div>
                                </div>

                                <!-- Password Suggestions -->
                                <div id="password-suggestions" class="mt-2 d-none">
                                    <div class="card border-info">
                                        <div class="card-body py-2">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-info">
                                                    <i class="fas fa-lightbulb me-1"></i>
                                                    Need a strong password?
                                                </small>
                                                <button type="button" class="btn btn-outline-info btn-sm" onclick="generatePassword()">
                                                    Generate
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Confirm New Password -->
                            <div class="mb-4">
                                <label for="new_password_confirmation" class="form-label fw-medium">
                                    <i class="fas fa-check-circle me-2"></i>
                                    Confirm New Password
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="fas fa-key text-muted"></i>
                                    </span>
                                    <input id="new_password_confirmation" name="new_password_confirmation" type="password" 
                                           class="form-control form-control-lg border-start-0 bg-light" 
                                           placeholder="Confirm your new password" required autocomplete="new-password">
                                    <button class="btn btn-outline-secondary border-start-0" type="button" onclick="togglePassword('new_password_confirmation')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div id="password-match" class="mt-2 d-none">
                                    <small class="text-muted">
                                        <i id="match-icon" class="fas fa-circle me-1"></i>
                                        <span id="match-text">Passwords do not match</span>
                                    </small>
                                </div>
                            </div>

                            <!-- Additional Security Options -->
                            <div class="card bg-light border-0 mb-4">
                                <div class="card-body py-3">
                                    <h6 class="card-title mb-3">
                                        <i class="fas fa-cog text-primary me-2"></i>
                                        Additional Security Options
                                    </h6>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input" type="checkbox" id="sign_out_all" name="sign_out_all" checked>
                                        <label class="form-check-label" for="sign_out_all">
                                            Sign out of all other devices after changing password
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="email_notification" name="email_notification" checked>
                                        <label class="form-check-label" for="email_notification">
                                            Send email notification about password change
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                                <a href="/security" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>
                                    Back to Security
                                </a>
                                <button type="submit" class="btn btn-primary btn-lg" id="submit-btn" disabled>
                                    <i class="fas fa-shield-alt me-2"></i>
                                    Change Password
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Password Generator Modal -->
    <div class="modal fade" id="passwordGeneratorModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-magic me-2"></i>
                        Password Generator
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Generated Password</label>
                        <div class="input-group">
                            <input type="text" class="form-control font-monospace" id="generated-password" readonly>
                            <button class="btn btn-outline-secondary" type="button" onclick="copyGeneratedPassword()">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="password-length" class="form-label">Length: <span id="length-value">16</span></label>
                                <input type="range" class="form-range" id="password-length" min="12" max="64" value="16" oninput="updateLength()">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="include-symbols" checked>
                                    <label class="form-check-label" for="include-symbols">
                                        Include symbols
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="include-numbers" checked>
                                    <label class="form-check-label" for="include-numbers">
                                        Include numbers
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-grid">
                        <button type="button" class="btn btn-primary" onclick="generateNewPassword()">
                            <i class="fas fa-sync-alt me-2"></i>
                            Generate New Password
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="useGeneratedPassword()">
                        <i class="fas fa-check me-2"></i>
                        Use This Password
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let passwordStrength = 0;
        const commonPasswords = [
            'password', '123456', '123456789', 'qwerty', 'abc123', 'password123',
            'admin', 'letmein', 'welcome', 'monkey', '1234567890', 'password1'
        ];

        // Password strength calculation
        function calculatePasswordStrength(password) {
            let score = 0;
            let feedback = [];

            // Length check
            if (password.length >= 12) {
                score += 25;
                updateRequirement('req-length', true);
            } else {
                updateRequirement('req-length', false);
                feedback.push('Use at least 12 characters');
            }

            // Character type checks
            if (/[A-Z]/.test(password)) {
                score += 15;
                updateRequirement('req-uppercase', true);
            } else {
                updateRequirement('req-uppercase', false);
                feedback.push('Include uppercase letters');
            }

            if (/[a-z]/.test(password)) {
                score += 15;
                updateRequirement('req-lowercase', true);
            } else {
                updateRequirement('req-lowercase', false);
                feedback.push('Include lowercase letters');
            }

            if (/[0-9]/.test(password)) {
                score += 15;
                updateRequirement('req-number', true);
            } else {
                updateRequirement('req-number', false);
                feedback.push('Include numbers');
            }

            if (/[^A-Za-z0-9]/.test(password)) {
                score += 15;
                updateRequirement('req-special', true);
            } else {
                updateRequirement('req-special', false);
                feedback.push('Include special characters');
            }

            // Common password check
            if (!commonPasswords.includes(password.toLowerCase())) {
                score += 15;
                updateRequirement('req-common', true);
            } else {
                updateRequirement('req-common', false);
                feedback.push('Avoid common passwords');
            }

            return { score, feedback };
        }

        function updateRequirement(id, met) {
            const element = document.getElementById(id);
            const icon = element.querySelector('i');
            
            if (met) {
                icon.className = 'fas fa-check-circle text-success me-2';
                element.classList.add('text-success');
                element.classList.remove('text-muted');
            } else {
                icon.className = 'fas fa-circle text-muted me-2';
                element.classList.remove('text-success');
                element.classList.add('text-muted');
            }
        }

        function updatePasswordStrength(password) {
            const { score } = calculatePasswordStrength(password);
            passwordStrength = score;
            
            const strengthBar = document.getElementById('strength-bar');
            const strengthText = document.getElementById('strength-text');
            
            let strengthClass = '';
            let strengthLabel = '';
            
            if (score < 30) {
                strengthClass = 'bg-danger';
                strengthLabel = 'Very Weak';
            } else if (score < 50) {
                strengthClass = 'bg-warning';
                strengthLabel = 'Weak';
            } else if (score < 70) {
                strengthClass = 'bg-info';
                strengthLabel = 'Fair';
            } else if (score < 90) {
                strengthClass = 'bg-primary';
                strengthLabel = 'Good';
            } else {
                strengthClass = 'bg-success';
                strengthLabel = 'Excellent';
            }
            
            strengthBar.className = `progress-bar ${strengthClass}`;
            strengthBar.style.width = `${score}%`;
            strengthText.textContent = strengthLabel;
            strengthText.className = `fw-medium ${strengthClass.replace('bg-', 'text-')}`;
            
            // Check for breaches (simulated)
            checkPasswordBreach(password);
            
            // Update submit button state
            updateSubmitButton();
        }

        function checkPasswordBreach(password) {
            const breachCheck = document.getElementById('breach-check');
            
            // Simulate breach check for common passwords
            if (commonPasswords.includes(password.toLowerCase()) && password.length > 0) {
                breachCheck.classList.remove('d-none');
            } else {
                breachCheck.classList.add('d-none');
            }
        }

        function checkPasswordMatch() {
            const newPassword = document.getElementById('new_password').value;
            const confirmPassword = document.getElementById('new_password_confirmation').value;
            const matchDiv = document.getElementById('password-match');
            const matchIcon = document.getElementById('match-icon');
            const matchText = document.getElementById('match-text');
            
            if (confirmPassword.length > 0) {
                matchDiv.classList.remove('d-none');
                
                if (newPassword === confirmPassword) {
                    matchIcon.className = 'fas fa-check-circle text-success me-1';
                    matchText.textContent = 'Passwords match';
                    matchText.className = 'text-success';
                } else {
                    matchIcon.className = 'fas fa-times-circle text-danger me-1';
                    matchText.textContent = 'Passwords do not match';
                    matchText.className = 'text-danger';
                }
            } else {
                matchDiv.classList.add('d-none');
            }
            
            updateSubmitButton();
        }

        function updateSubmitButton() {
            const newPassword = document.getElementById('new_password').value;
            const confirmPassword = document.getElementById('new_password_confirmation').value;
            const currentPassword = document.getElementById('current_password').value;
            const submitBtn = document.getElementById('submit-btn');
            
            const isValid = currentPassword.length > 0 && 
                           passwordStrength >= 70 && 
                           newPassword === confirmPassword && 
                           newPassword.length > 0 &&
                           !commonPasswords.includes(newPassword.toLowerCase());
            
            submitBtn.disabled = !isValid;
        }

        // Password visibility toggle
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const button = field.nextElementSibling;
            const icon = button.querySelector('i');
            
            if (field.type === 'password') {
                field.type = 'text';
                icon.classList.replace('fa-eye', 'fa-eye-slash');
            } else {
                field.type = 'password';
                icon.classList.replace('fa-eye-slash', 'fa-eye');
            }
        }

        // Password generator
        function generatePassword() {
            generateNewPassword();
            const modal = new bootstrap.Modal(document.getElementById('passwordGeneratorModal'));
            modal.show();
        }

        function generateNewPassword() {
            const length = document.getElementById('password-length').value;
            const includeSymbols = document.getElementById('include-symbols').checked;
            const includeNumbers = document.getElementById('include-numbers').checked;
            
            let charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
            if (includeNumbers) charset += '0123456789';
            if (includeSymbols) charset += '!@#$%^&*()_+-=[]{}|;:,.<>?';
            
            let password = '';
            for (let i = 0; i < length; i++) {
                password += charset.charAt(Math.floor(Math.random() * charset.length));
            }
            
            document.getElementById('generated-password').value = password;
        }

        function updateLength() {
            const length = document.getElementById('password-length').value;
            document.getElementById('length-value').textContent = length;
        }

        function copyGeneratedPassword() {
            const passwordField = document.getElementById('generated-password');
            passwordField.select();
            navigator.clipboard.writeText(passwordField.value);
            showAlert('Password copied to clipboard!', 'success');
        }

        function useGeneratedPassword() {
            const generatedPassword = document.getElementById('generated-password').value;
            document.getElementById('new_password').value = generatedPassword;
            updatePasswordStrength(generatedPassword);
            
            bootstrap.Modal.getInstance(document.getElementById('passwordGeneratorModal')).hide();
            showAlert('Generated password applied!', 'success');
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            const newPasswordField = document.getElementById('new_password');
            const confirmPasswordField = document.getElementById('new_password_confirmation');
            const currentPasswordField = document.getElementById('current_password');
            const suggestionsDiv = document.getElementById('password-suggestions');
            
            newPasswordField.addEventListener('input', function() {
                if (this.value.length > 0) {
                    updatePasswordStrength(this.value);
                    suggestionsDiv.classList.add('d-none');
                } else {
                    suggestionsDiv.classList.remove('d-none');
                    document.getElementById('strength-text').textContent = 'Enter password';
                    document.getElementById('strength-bar').style.width = '0%';
                }
            });
            
            confirmPasswordField.addEventListener('input', checkPasswordMatch);
            currentPasswordField.addEventListener('input', updateSubmitButton);
            
            // Form submission
            document.getElementById('change-password-form').addEventListener('submit', function(e) {
                const submitBtn = document.getElementById('submit-btn');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Changing Password...';
            });
        });

        // Utility functions
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alert-container');
            const alertHTML = `
                <div class="alert alert-${type} d-flex align-items-center alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-triangle' : type === 'info' ? 'info-circle' : 'exclamation-circle'} me-2"></i>
                    <div class="flex-grow-1">${message}</div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            alertContainer.innerHTML = alertHTML;
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                const alert = alertContainer.querySelector('.alert');
                if (alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            }, 5000);
        }

        // Auto-dismiss existing alerts after 5 seconds
        setTimeout(() => {
            document.querySelectorAll('.alert-dismissible').forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>

    <style>
        .progress-bar {
            transition: width 0.3s ease, background-color 0.3s ease;
        }
        
        .form-check-input:checked {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }
        
        .card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .card:hover {
            transform: translateY(-1px);
        }
        
        .input-group-text {
            border-color: #dee2e6;
        }
        
        .form-control:focus {
            border-color: var(--bs-primary);
            box-shadow: 0 0 0 0.2rem rgba(var(--bs-primary-rgb), 0.25);
        }
    </style>

    {{template "layouts/footer.tmpl" .}}
{{end}} 